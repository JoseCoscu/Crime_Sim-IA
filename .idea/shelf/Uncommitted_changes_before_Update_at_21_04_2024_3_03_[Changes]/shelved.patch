Index: map.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from locations_class import *\r\nfrom agent_class import *\r\nimport random as r\r\nfrom graph import *\r\nimport threading\r\nimport time\r\nfrom timer import TimeMeter, time_updater\r\n\r\npolice_departments = []\r\nhospitals = []\r\npharmacy = []\r\nfire_departments = []\r\nhouses = []\r\nstores = []\r\ngs_stations = []\r\nbanks = []\r\ncasinos = []\r\nall_locations = []\r\ntime_meter = TimeMeter()\r\n\r\n# region Creacion de locaclizaciones\r\n## Creating Locations--------------------\r\n\r\nfor i in range(1, 21):\r\n    houses.append(House(i, \"House_\" + str(i)))\r\n    all_locations.append(houses[-1])\r\n\r\nfor i in range(1, 5):\r\n    stores.append(Store(i, \"Store_\" + str(i), 0, [], 100, 1000))\r\n    gs_stations.append(GasStation(i, \"Gas Station_\" + str(i), 0, [], 100))\r\n\r\n    all_locations.append(stores[-1])\r\n    all_locations.append(gs_stations[-1])\r\n\r\nfor i in range(1, 3):\r\n    hospitals.append(Hospital(i, \"Hospital_\" + str(i), [], 0, []))\r\n    banks.append(Bank(i, \"Bank_\" + str(i), []))\r\n    casinos.append(Casino(i, \"Casino_\" + str(i), []))\r\n    police_departments.append(PoliceDepartment(i, \"PNR_\" + str(i), [], [], []))\r\n    fire_departments.append(FireDepartment(i, \"Fire Department_\" + str(i), [], [], 100))\r\n    pharmacy.append(Pharmacy(i, \"Pharmacy_\" + str(i), []))\r\n\r\n    all_locations.append(hospitals[-1])\r\n    all_locations.append(pharmacy[-1])\r\n    all_locations.append(banks[-1])\r\n    all_locations.append(casinos[-1])\r\n    all_locations.append(police_departments[-1])\r\n    all_locations.append(fire_departments[-1])\r\n\r\n## Police Departments Connections----------------\r\n\r\npolice_departments[0].add_row(houses[0:3], 1, 5)\r\npolice_departments[0].add_row([stores[0], gs_stations[0]], 1, 5)\r\npolice_departments[1].add_row([stores[3], banks[1], houses[19], casinos[1]], 3, 10)\r\n\r\n## Hospitals Connections ---------------------------\r\n\r\nhospitals[0].add_row([gs_stations[3], houses[15], houses[18], casinos[1]], 5, 8)\r\nhospitals[1].add_row([houses[13], houses[14], houses[16], gs_stations[2], stores[2]], 4, 9)\r\n\r\n## Pharmacy Connections ------------------------------\r\n\r\npharmacy[0].add_row([hospitals[0], gs_stations[3], houses[18]], 1, 3)\r\npharmacy[1].add_row([hospitals[1], gs_stations[2], houses[13]], 1, 3)\r\n\r\n## Banks Connections -----------------------------------\r\n\r\nbanks[0].add_row([houses[8], houses[11], houses[12], houses[14], stores[2]], 5, 10)\r\nbanks[1].add_row([houses[16], houses[17], stores[3], fire_departments[1]], 5, 6)\r\n\r\n## Casinos Connecctions --------------------------------------------\r\n\r\ncasinos[0].add_row([houses[15], houses[8], houses[9], houses[12], houses[14], houses[16], gs_stations[2],\r\n                    banks[1]], 7, 10)\r\ncasinos[1].add_row(houses[17:20], 3, 5)\r\n\r\n## Fire Departments Connections ----------------------------------\r\n\r\n\r\nfire_departments[0].add_row([houses[10], houses[18], houses[0], stores[1], gs_stations[1]], 3, 6)\r\nfire_departments[1].add_row([houses[16], gs_stations[2]], 3, 8)\r\n\r\n## Stores Connections ---------------------------------------------\r\n\r\nstores[0].add_row([houses[0], houses[1], houses[6]], 5, 10)\r\nstores[1].add_row([houses[0], houses[8], houses[3], houses[10]], 5, 15)\r\nstores[2].add_row([houses[7], houses[5], houses[4], houses[13], gs_stations[0]], 10, 20)\r\nstores[3].add_row([houses[19], houses[17], houses[9], houses[16], gs_stations[3]], 8, 15)\r\n\r\n## Gas Stations Connections ---------------------------------------\r\n\r\ngs_stations[0].add_row(houses[1:8], 3, 8)\r\ngs_stations[0].add_row([houses[8]], 5, 9)\r\ngs_stations[1].add_row([houses[15], houses[18], houses[9], houses[8]], 2, 10)\r\ngs_stations[2].add_row([houses[12], houses[14], houses[16]], 2, 7)\r\ngs_stations[3].add_row([houses[16], houses[19], houses[15], houses[18]], 3, 10)\r\n\r\n## Houses Connections -----------------------------------------------\r\n\r\nhouses[11].add_row([fire_departments[1], houses[7], stores[2]], 6, 8)\r\nhouses[2].add_row([houses[4]], 3, 4)\r\n# endregion\r\n\r\n\r\n## Creating Agents --------------------------------------------------\r\n\r\nall_agents = []\r\ncriminals = []\r\ncitizens = []\r\nofficers = []\r\nemployee = []\r\nid = 1\r\n\r\nG = create_map(all_locations)\r\n\r\nfor i in range(0, 1):\r\n    all_agents.append(Citizen(id, 'Citizen_' + str(i), houses[8], time_meter, G, all_locations, houses[0]))\r\n    citizens.append(all_agents[-1])\r\n    all_agents.append(\r\n        Officer(id, 'Officer_' + str(i), police_departments[0], [], [], 10, time_meter, G, all_locations, houses[0]))\r\n    officers.append(all_agents[-1])\r\n    officers[-1].state['work'] = True\r\n    all_agents.append(\r\n        Criminal(id, 'Criminal_' + str(i), houses[0], [], [], time_meter, G, all_locations, houses[5], 10))\r\n    criminals.append(all_agents[-1])\r\n    all_agents.append(\r\n        Employee(id, 'Employee_' + str(i), houses[0], stores[0], time_meter, G, all_locations, houses[10]))\r\n    employee.append(all_agents[-1])\r\n\r\nfor i in officers:\r\n    police_departments[0].current_officers.append(i)\r\n\r\n\r\n# while (True):\r\n#     for i in all_agents:\r\n#         if isinstance(i, Citizen):\r\n#             i()\r\n#         if isinstance(i,Criminal):\r\n#             i()\r\n#\r\n#     time += 1\r\n#     if time >= 10:\r\n#         break\r\n\r\n\r\ndef citizens_threads(i):\r\n    citizens[i]()\r\n    print(f'tiempo de {citizens[i].name} es {citizens[i].time.get_global_time()}')\r\n\r\n\r\ndef criminal_threads(i):\r\n    criminals[i]()\r\n    print(f'tiempo de {criminals[i].name} es {criminals[i].time.get_global_time()}')\r\n\r\n\r\ndef employee_threads(i):\r\n    employee[i]()\r\n    print(f'tiempo de {employee[i].name} es {employee[i].time.get_global_time()}')\r\n\r\n\r\ndef officers_threads(i):\r\n    officers[i]()\r\n\r\n\r\n#\r\nt = []\r\n# # for i in range(0, 1):\r\n# #     t.append(threading.Thread(target=citizens_threads, args=(i,)))\r\n# #     t[-1].start()\r\n#\r\n# Creamos un hilo para actualizar el tiempo\r\ntime_updater_thread = threading.Thread(target=time_updater, args=(time_meter,))\r\ntime_updater_thread.daemon = True  # El hilo se detendr√° cuando el programa principal termine\r\ntime_updater_thread.start()\r\n#\r\n# # hilos de oficiales\r\n# for i in range(0, len(officers)):\r\n#     t.append(threading.Thread(target=officers_threads, args=(i,)))\r\n#\r\n# ### hilos de citizens\r\nfor i in range(0, len(citizens)):\r\n    t.append(threading.Thread(target=citizens_threads, args=(i,)))\r\n#\r\n# ## hilos de criminales\r\nfor i in range(0, len(criminals)):\r\n    t.append(threading.Thread(target=criminal_threads, args=(i,)))\r\n#\r\n# ## hilos de empleados\r\n# for i in range(0, len(employee)):\r\n#     t.append(threading.Thread(target=employee_threads, args=(i,)))\r\n#\r\nfor i in t:\r\n    i.start()\r\n\r\n\r\n# criminals[0].try_robbery()\r\n# citizens[0]()\r\n\r\n# show_locations(G)\r\n\r\n# print(all_agents[0].get_distance(route[1]))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/map.py b/map.py
--- a/map.py	(revision 2a28e5ba5b980c564d0a39e4e7dfab56090360bf)
+++ b/map.py	(date 1713681946077)
@@ -196,6 +196,6 @@
 # criminals[0].try_robbery()
 # citizens[0]()
 
-# show_locations(G)
+show_locations(G)
 
 # print(all_agents[0].get_distance(route[1]))
